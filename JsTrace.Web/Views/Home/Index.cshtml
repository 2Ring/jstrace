@{
    ViewBag.Title = "JsTrace Test Index";
}
<h2>Testing Index</h2>

<script id="levelsTemplate" type="text/x-jquery-tmpl">
    <span>Selected:</span>&nbsp;&nbsp;<span data-getfrom="[selectedLevel]"></span>
    <br/>
    <br/>
    <select title="select a Level!" id="levelsOptions">
        {{#each allLevels}}
            <option value="{{=$data}}">{{=$data}}</option>
        {{/each}}
    </select>
</script>

<script id="messageTemplate" type="text/x-jquery-tmpl">
    <tr>
        <td>{{=module}}</td>
        <td>{{=level}}</td>
        <td>{{=message}}</td>
    </tr>
</script>

<button id="testBtn">Trace Test</button>
<button id="clearBtn">Clear</button>
<br />
<br />
<div id="levels"></div>
<br />
<br />
<table style="width: 100%; text-align: left;">
    <thead>
        <tr>
            <th style="width: 10em">
                Module
            </th>
            <th style="width: 6em">
                Level
            </th>
            <th style="width: auto">
                Message
            </th>
        </tr>
    </thead>
    <tbody id="messages">
    </tbody>
</table>

<script type="text/javascript">
    var messageData = {
        allMessages: []
    };

    var levelInfo = {
        allLevels: [],
        selectedLevel: ''
    };

    var traceMessage = function (mod, lev, msg) {
        return {
            module: mod,
            level: lev,
            message: msg
        };
    };

    var bindIt = function () {
        $('div#messages').link(messageData, 'traceMessageTemplate');
        $('div#levels').link(levelInfo, 'levelsTemplate');
    };

    $(function () {
        Trace.traceLevel('TestModule', Trace.Levels.log);

        $('#messageTemplate').template('message');
        $('#levelsTemplate').template('levelsTemplate');

        // set up the levels.
        for (var key in Trace.Levels) {
            if (Trace.Levels.hasOwnProperty(key) === true) {
                levelInfo.allLevels.push(key);
            }
        }

        // setup the callback
        //Trace.setCallback(function (module, level) {
        //    // filter it 
        //    if (Trace.shouldTrace(module, level) == true) {
        //        var args = Array.prototype.slice.apply(arguments).slice(2);
        //        var msg = module + ' [' + level + '] - ' + args.join(' ');

        //        var traceMsg = new traceMessage(module, level, msg);

        //        var html = $.render(traceMsg, 'message');
        //        $('#messages').append(html);
        //    }
        //}, true);

        // init value
        levelInfo.selectedLevel = Trace.traceLevel('TestModule', true);

        // bind it
        bindIt();

        $('select#levelsOptions').val(levelInfo.selectedLevel);

        // select support sucks in jsViews right now, so...
        $('select#levelsOptions').change(function () {
            Trace.traceLevel('TestModule', this.value);
            $.observable(levelInfo).setProperty({ selectedLevel: this.value });
        });

        $('button#testBtn').click(function () {
            var testMod = new TestModule();
            testMod.foo();
        });

        $('button#clearBtn').click(function () {
            $('#messages').html('');
        });
    });
</script>
